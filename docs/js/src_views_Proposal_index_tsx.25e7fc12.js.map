{"version":3,"file":"js/src_views_Proposal_index_tsx.25e7fc12.js","mappings":"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","sources":["webpack://react/./src/views/Proposal/useTitleInput/index.tsx","webpack://react/./src/views/Proposal/useDescribeInput/MdEditorDialog/index.tsx","webpack://react/./src/views/Proposal/useDescribeInput/index.tsx","webpack://react/./src/views/Proposal/useDatePicker/index.tsx","webpack://react/./src/views/Proposal/index.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from 'react'\r\n\r\nimport { TextField } from '@mui/material'\r\n\r\ninterface useTitleInputReturn {\r\n  title: string\r\n  validateTitleInput: () => Promise<boolean>\r\n  renderTitleTextField: () => JSX.Element\r\n}\r\n\r\nconst useTitleInput = (): useTitleInputReturn => {\r\n  const [title, setTitle] = useState('')\r\n  const [titleIsValid, setTitleIsValid] = useState(false)\r\n\r\n  const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(event.target.value)\r\n    setTitleIsValid(false)\r\n  }\r\n\r\n  const validateTitleInput = async (): Promise<boolean> => {\r\n    const result = !!title\r\n    setTitleIsValid(!result)\r\n    return result\r\n  }\r\n\r\n  const renderTitleTextField = (): JSX.Element => {\r\n    return (\r\n      <>\r\n        <h6 className='p_f_c_label'>标题<sup>*</sup></h6>\r\n        <TextField\r\n          sx={{\r\n            width: '100%',\r\n          }}\r\n          value={title}\r\n          error={titleIsValid}\r\n          required\r\n          label=\"标题\"\r\n          placeholder=\"请输入标题\"\r\n          onChange={handleTitleChange}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return { title, validateTitleInput, renderTitleTextField }\r\n}\r\n\r\nexport default useTitleInput\r\n","import React, { forwardRef, ForwardedRef } from 'react'\r\n\r\nimport { Dialog } from '@mui/material'\r\n\r\nimport MarkdownIt from 'markdown-it'\r\nimport MdEditor from 'react-markdown-editor-lite'\r\n\r\nimport { DescribeChangeParams } from '..'\r\n\r\nimport 'react-markdown-editor-lite/lib/index.css'\r\n\r\nconst mdParser = new MarkdownIt()\r\n\r\nexport interface MdEditorDialogProps {\r\n  value: string\r\n  open: boolean\r\n  onClose: () => void\r\n  onChange: (props: DescribeChangeParams) => void\r\n}\r\n\r\nexport default forwardRef((props: MdEditorDialogProps, ref: ForwardedRef<MdEditor>): JSX.Element => {\r\n\r\n  const { value, open, onClose, onChange } = props\r\n\r\n  return (\r\n    <Dialog onClose={onClose} open={open} fullWidth={true} maxWidth=\"md\">\r\n      <MdEditor\r\n        ref={ref}\r\n        value={value}\r\n        style={{ height: '500px' }}\r\n        placeholder=\"请输入价值、周期、预期成果\"\r\n        renderHTML={text => mdParser.render(text)}\r\n        onChange={onChange}\r\n      />\r\n    </Dialog>\r\n  )\r\n})","import React, { useState, useRef, useEffect } from 'react'\r\n\r\nimport { TextField } from '@mui/material'\r\n\r\nimport MdEditorDialog from './MdEditorDialog'\r\n\r\nimport MdEditor from 'react-markdown-editor-lite'\r\n\r\nconst MAX_LENGTH = 10000\r\n\r\ninterface useDescribeInputReturn {\r\n  describe: string\r\n  validateDescribeEditor: () => Promise<boolean>\r\n  renderDescribeEditor: () => JSX.Element\r\n}\r\n\r\nexport type DescribeChangeParams = {\r\n  html: string\r\n  text: string\r\n}\r\n\r\nconst useDescribeInput = (): useDescribeInputReturn => {\r\n  const [describe, setDescribe] = useState('')\r\n  const [, setDescribeHTML] = useState('')\r\n  const [describeIsValid, setDescribeIsValid] = useState(false)\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const describeRef = useRef<HTMLInputElement>(null)\r\n\r\n  const mdEditorRef = useRef<MdEditor>(null)\r\n\r\n  const handleDescribeChange = ({ text, html }: DescribeChangeParams) => {\r\n    setDescribe(text)\r\n    setDescribeHTML(html)\r\n    setDescribeIsValid(false)\r\n  }\r\n\r\n  const validateDescribeEditor = async (): Promise<boolean> => {\r\n    const result = !!describe && describe.length < MAX_LENGTH\r\n    setDescribeIsValid(!result)\r\n    return result\r\n  }\r\n\r\n  const handleDescribeFocus = () => {\r\n    Promise.resolve().then(() => {\r\n      setOpen(true)\r\n      describeRef.current?.blur()\r\n    })\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      Promise.resolve().then(() => {\r\n        mdEditorRef.current?.nodeMdText.current.focus()\r\n      })\r\n    }\r\n  }, [open])\r\n\r\n  const renderDescribeEditor = () => {\r\n    return (\r\n      <>\r\n        <h6 className='p_f_c_label p_f_c_describe'>\r\n          <span>描述<sup>*</sup></span>\r\n          <span className={`p_f_c_d_num ${describeIsValid ? 'p_f_c_d_error' : ''}`}>{describe.length} / {MAX_LENGTH}</span>\r\n        </h6>\r\n        <TextField\r\n          sx={{\r\n            width: '100%',\r\n          }}\r\n          inputRef={describeRef}\r\n          label=\"描述\"\r\n          value={describe}\r\n          error={describeIsValid}\r\n          onFocus={handleDescribeFocus}\r\n          required\r\n          multiline\r\n          rows={4}\r\n          placeholder=\"请输入价值、周期、预期成果\"\r\n        />\r\n        <MdEditorDialog ref={mdEditorRef} open={open} onClose={handleClose} value={describe} onChange={handleDescribeChange} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return { describe, validateDescribeEditor, renderDescribeEditor }\r\n}\r\n\r\nexport default useDescribeInput\r\n","import React, { useState } from 'react'\r\n\r\nimport { TextField } from '@mui/material'\r\n\r\nimport { LocalizationProvider } from '@mui/x-date-pickers'\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker'\r\n\r\nimport { Dayjs } from 'dayjs'\r\n\r\ninterface useDatePickerReturn {\r\n  startDate: Dayjs | null\r\n  endDate: Dayjs | null\r\n  validateDatePicker: () => Promise<boolean>\r\n  renderDatePicker: () => JSX.Element\r\n}\r\n\r\nconst useDatePicker = (): useDatePickerReturn => {\r\n  const [startDate, setStartDate] = useState<Dayjs | null>(null)\r\n  const [startDateValid, seStartDateIsValid] = useState(false)\r\n\r\n  const [endDate, setEndDate] = useState<Dayjs | null>(null)\r\n  const [endDateValid, setEndDateIsValid] = useState(false)\r\n\r\n  const handleStartDateChange = (newValue: Dayjs | null) => {\r\n    setStartDate(newValue)\r\n    seStartDateIsValid(false)\r\n  }\r\n\r\n  const handleEndDateChange = (newValue: Dayjs | null) => {\r\n    setEndDate(newValue)\r\n    setEndDateIsValid(false)\r\n  }\r\n\r\n  const validateDatePicker = async (): Promise<boolean> => {\r\n    let startDateResult = !!startDate\r\n    let endDateResult = !!endDate\r\n\r\n    if (endDate && startDate) {\r\n      startDateResult = endDateResult = (endDate.valueOf() - startDate.valueOf()) > -1\r\n    }\r\n\r\n    seStartDateIsValid(!startDateResult)\r\n    setEndDateIsValid(!endDateResult)\r\n    return startDateResult && endDateResult\r\n  }\r\n\r\n  const renderDatePicker = (): JSX.Element => {\r\n    return (\r\n      <>\r\n        <h6 className='p_f_c_label'>开始投票日期<sup>*</sup></h6>\r\n        <h6 className='p_f_c_label p_f_c_l_right'>结束投票日期<sup>*</sup></h6>\r\n        \r\n        <div className=\"p_f_c_d_data\">\r\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <DesktopDatePicker\r\n              label=\"开始投票日期\"\r\n              inputFormat=\"MM/DD/YYYY\"\r\n              value={startDate}\r\n              onChange={handleStartDateChange}\r\n              renderInput={params => <TextField {...params} required error={startDateValid} />}\r\n              maxDate={endDate || undefined}\r\n            />\r\n          </LocalizationProvider>\r\n          <div className=\"p_f_c_d_box\">至</div>\r\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <DesktopDatePicker\r\n              label=\"结束投票日期\"\r\n              inputFormat=\"MM/DD/YYYY\"\r\n              value={endDate}\r\n              onChange={handleEndDateChange}\r\n              renderInput={params => <TextField {...params} required error={endDateValid} />}\r\n              minDate={startDate || undefined}\r\n            />\r\n          </LocalizationProvider>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return { startDate, endDate, validateDatePicker, renderDatePicker }\r\n}\r\n\r\nexport default useDatePicker\r\n","import React from 'react'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { Button } from '@mui/material'\r\n\r\nimport { proposalsApi } from '@api/index'\r\n\r\nimport useTitleInput from './useTitleInput'\r\nimport useDescribeInput from './useDescribeInput'\r\nimport useDatePicker from './useDatePicker'\r\n\r\nimport message from '@components/Message'\r\n\r\nimport './index.less'\r\n\r\nexport default (): JSX.Element => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const { title, validateTitleInput, renderTitleTextField } = useTitleInput()\r\n\r\n  const { describe, validateDescribeEditor, renderDescribeEditor } = useDescribeInput()\r\n\r\n  const { startDate, endDate, validateDatePicker, renderDatePicker } = useDatePicker()\r\n\r\n\r\n  const handleSubmit = async () => {\r\n\r\n    const validTitle = await validateTitleInput()\r\n    const validDescribe = await validateDescribeEditor()\r\n    const validDate = await validateDatePicker()\r\n\r\n    if (validTitle && validDescribe && validDate) {\r\n      proposalsApi.createProposal([title, describe, startDate!.valueOf(), endDate!.valueOf()]).then(() => {\r\n        message.success('提案提交成功')\r\n        navigate('/')\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='proposal'>\r\n      <div className=\"proposal_back\">\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            width: 100,\r\n          }}\r\n          onClick={() => navigate('/')}>\r\n          返回\r\n        </Button>\r\n      </div>\r\n      <div className=\"proposal_form\">\r\n        <h1 className=\"proposal_form_title\">发起提案</h1>\r\n        <h6 className=\"proposal_form_subTitle\">您需要持有至少100个积分才可以发起提案</h6>\r\n        <div className=\"proposal_form_context\">\r\n          <div className=\"p_f_c_title\">\r\n            {renderTitleTextField()}\r\n          </div>\r\n          <div className=\"p_f_c_description\">\r\n            {renderDescribeEditor()}\r\n          </div>\r\n          <div className='p_f_c_date'>\r\n            {renderDatePicker()}\r\n          </div>\r\n          <div className=\"p_f_c_button\">\r\n            <p>每一份提案均会上传Aptos区块链</p>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{\r\n                width: '100%',\r\n                height: 50\r\n              }}\r\n              onClick={handleSubmit}>\r\n              提交\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["mdParser","MarkdownIt","forwardRef","props","ref","value","open","onClose","onChange","Dialog","fullWidth","maxWidth","style","height","placeholder","renderHTML","text","render","navigate","useNavigate","useState","title","setTitle","titleIsValid","setTitleIsValid","handleTitleChange","event","target","validateTitleInput","result","renderTitleTextField","className","TextField","sx","width","error","required","label","useTitleInput","describe","setDescribe","setDescribeHTML","describeIsValid","setDescribeIsValid","React","setOpen","describeRef","useRef","mdEditorRef","handleDescribeChange","html","validateDescribeEditor","length","handleDescribeFocus","Promise","resolve","then","current","blur","handleClose","useEffect","nodeMdText","focus","renderDescribeEditor","inputRef","onFocus","multiline","rows","MdEditorDialog","useDescribeInput","startDate","setStartDate","startDateValid","seStartDateIsValid","endDate","setEndDate","endDateValid","setEndDateIsValid","handleStartDateChange","newValue","handleEndDateChange","validateDatePicker","startDateResult","endDateResult","valueOf","renderDatePicker","LocalizationProvider","dateAdapter","AdapterDayjs","DesktopDatePicker","inputFormat","renderInput","params","maxDate","undefined","minDate","useDatePicker","handleSubmit","validTitle","validDescribe","validDate","proposalsApi","message","Button","variant","onClick"],"sourceRoot":""}