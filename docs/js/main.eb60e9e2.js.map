{"version":3,"file":"js/main.eb60e9e2.js","mappings":"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","sources":["webpack://react/./src/components/WalletButton/index.tsx","webpack://react/./src/constants/wallet.ts","webpack://react/./src/components/ExplorerRoutes/index.tsx","webpack://react/./src/components/Header/index.tsx","webpack://react/./src/components/Layout/index.tsx","webpack://react/./src/utils/routes.tsx","webpack://react/./src/routes/common/index.tsx","webpack://react/./src/routes/index.tsx","webpack://react/./src/App.tsx","webpack://react/./src/main.tsx","webpack://react/./src/store/index.ts","webpack://react/./src/store/modules/wallet.ts","webpack://react/./src/utils/index.ts","webpack://react/./src/utils/wallet.ts"],"sourcesContent":["import React from 'react'\r\n\r\nimport {\r\n  Button,\r\n  ButtonBaseProps,\r\n  ButtonProps,\r\n  Link,\r\n  Stack,\r\n  Tooltip,\r\n} from '@mui/material'\r\n\r\nimport ErrorIcon from '@mui/icons-material/Error'\r\n\r\nimport { cstInstallWalletUrl } from '@constants/wallet'\r\n\r\nimport { isUpdatedVersion, truncateAddress } from '@utils/wallet'\r\n\r\nimport { useAppDispatch, useAppSelector } from '@store/index'\r\n\r\n// import { connectWalletAsync } from '@store/modules/wallet'\r\nimport { connectWallet } from '@store/modules/wallet'\r\n\r\ntype WalletButtonWrapperProps = {\r\n  text: string | null\r\n}\r\n\r\nconst WalletButtonWrapper = ({\r\n  text,\r\n  ...props\r\n}: WalletButtonWrapperProps & ButtonBaseProps & ButtonProps): JSX.Element => {\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      {...props}\r\n    >\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst OldWalletVersionWarning = (): JSX.Element => {\r\n  const warningText = (\r\n    <Link\r\n      href=\"https://github.com/aptos-labs/aptos-core/releases/\"\r\n      target=\"_blank\"\r\n    >\r\n      请安装最新的 Aptos 钱包扩展\r\n    </Link>\r\n  )\r\n  return (\r\n    <Tooltip title={warningText}>\r\n      <Stack ml={1}>\r\n        <ErrorIcon />\r\n      </Stack>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\ninterface WalletButtonProps extends ButtonProps {\r\n  text?: string\r\n}\r\n\r\nexport const WalletButton = ({ text, ...props }: WalletButtonProps): JSX.Element => {\r\n  const { isInstalled, isConnected, isAccountSet, accountAddress } = useAppSelector(state => state.wallet)\r\n  const dispatch = useAppDispatch()\r\n\r\n  if (!isInstalled) {\r\n    return (\r\n      <Tooltip\r\n        title={\r\n          <Link href={cstInstallWalletUrl} target=\"_blank\" color=\"#fff\">\r\n            请安装 Aptos 钱包\r\n          </Link>\r\n        }\r\n      >\r\n        <span>\r\n          <WalletButtonWrapper disabled text=\"安装钱包\" {...props} />\r\n        </span>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  const isWalletLatestVersion = isUpdatedVersion()\r\n\r\n  return (\r\n    <>\r\n      {isInstalled && !isAccountSet && (\r\n        <Tooltip title=\"使用钱包创建帐户\">\r\n          <span>\r\n            <WalletButtonWrapper disabled text=\"创建用户\" {...props}>\r\n              {!isWalletLatestVersion && <OldWalletVersionWarning />}\r\n            </WalletButtonWrapper>\r\n          </span>\r\n        </Tooltip>\r\n      )}\r\n\r\n      {isInstalled && isAccountSet && !isConnected && (\r\n        <WalletButtonWrapper\r\n          {...props}\r\n          onClick={() => dispatch(connectWallet())}\r\n          text=\"连接钱包\"\r\n        >\r\n          {!isWalletLatestVersion && <OldWalletVersionWarning />}\r\n        </WalletButtonWrapper>\r\n      )}\r\n\r\n      {isInstalled && isConnected && (\r\n        <WalletButtonWrapper\r\n          text={text || accountAddress && truncateAddress(accountAddress)}\r\n          {...props}\r\n        >\r\n          {!isWalletLatestVersion && <OldWalletVersionWarning />}\r\n        </WalletButtonWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","export const cstInstallWalletUrl = 'https://chrome.google.com/webstore/detail/petra-aptos-wallet/ejjladinnckdgjemekebdpeokbikhfci'","import React, { ReactNode } from 'react'\r\n\r\nimport { useLocation, Navigate } from 'react-router-dom'\r\n\r\nimport { useAppSelector } from '@store/index'\r\n\r\nimport { routerRules } from '@routes/index'\r\n\r\ninterface IProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport default ({ children }: IProps): JSX.Element => {\r\n\r\n  const location = useLocation()\r\n\r\n  const { isAsyncFinish, isConnected } = useAppSelector(state => state.wallet)\r\n\r\n  const routerRule = routerRules[location.pathname]\r\n\r\n  const canAccess = routerRule ? routerRule['isConnected'] : false\r\n\r\n  return (\r\n    <>{\r\n      isAsyncFinish ?\r\n        canAccess ?\r\n          isConnected ?\r\n            children\r\n            : <Navigate to=\"/\" />\r\n          : children\r\n        : <></>\r\n    } </>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport { WalletButton } from '../WalletButton'\r\n\r\nimport './index.less'\r\n\r\nexport default (): JSX.Element => {\r\n  return (\r\n    <div className='header'>\r\n      <div className=\"header_logo\">MoveDAO</div>\r\n      <div className=\"header_button\">\r\n        <WalletButton />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Outlet } from 'react-router-dom'\r\nimport Header from '@components/Header'\r\n\r\n\r\nexport default (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Outlet />\r\n    </>\r\n  )\r\n}\r\n","import React, { ReactNode, Suspense } from 'react'\r\n\r\nexport const lazyLoad = (children: ReactNode): ReactNode => {\r\n  return <Suspense fallback={<></>}>{children}</Suspense>\r\n}","import React, { lazy } from 'react'\r\nimport { RouteObject } from 'react-router-dom'\r\n\r\nimport { lazyLoad } from '@utils/routes'\r\n\r\nconst Home = lazy(() => import('@views/Home/index'))\r\nconst List = lazy(() => import('@views/List/index'))\r\nconst Proposal = lazy(() => import('@views/Proposal/index'))\r\nconst Detail = lazy(() => import('@views/Detail/index'))\r\n\r\nexport const routes: RouteObject[] = [\r\n  {\r\n    index: true,\r\n    element: lazyLoad(<Home />),\r\n  },\r\n  {\r\n    path: '/list',\r\n    element: lazyLoad(<List />),\r\n  },\r\n  {\r\n    path: '/detail/:handle/:id',\r\n    element: lazyLoad(<Detail />),\r\n  },\r\n  {\r\n    path: '/proposal',\r\n    element: lazyLoad(<Proposal />),\r\n  },\r\n  \r\n]","import React from 'react'\r\nimport { Navigate, RouteObject } from 'react-router-dom'\r\nimport ExplorerRoutes from '@components/ExplorerRoutes'\r\nimport Layout from '@components/Layout'\r\n\r\nimport { routes as common } from './common'\r\n\r\ninterface Rules {\r\n  isConnected: boolean\r\n}\r\n\r\nexport const routerRules: Record<string, Rules> = {\r\n  '/proposal': {\r\n    isConnected: true,\r\n  },\r\n}\r\n\r\n\r\nconst router: RouteObject[] = [\r\n  {\r\n    path: '/',\r\n    element: <ExplorerRoutes children={<Layout />} />,\r\n    children: [\r\n      ...common,\r\n      {\r\n        path: '*',\r\n        element: <Navigate to='/' />,\r\n      },\r\n    ]\r\n  }\r\n]\r\n\r\nexport default router","import React, { useEffect } from 'react'\r\n\r\nimport { useRoutes } from 'react-router-dom'\r\n\r\nimport router from '@routes/index' // 路由\r\n\r\nimport { useAppDispatch } from '@store/index'\r\n\r\nimport { setWallet } from '@store/modules/wallet'\r\n\r\nimport { isUpdatedVersion } from '@utils/wallet'\r\n\r\nexport default (): JSX.Element => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (isUpdatedVersion()) {\r\n      dispatch(setWallet())\r\n      window.aptos?.on?.('accountChanged', () => {\r\n        dispatch(setWallet())\r\n      })\r\n      window.aptos?.on?.(\"networkChanged\", () => {\r\n        dispatch(setWallet())\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {useRoutes(router)}\r\n    </>\r\n  )\r\n\r\n}\r\n","import 'core-js/es/map'\r\nimport 'core-js/es/set'\r\n\r\nimport React from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from '@store/index'\r\nimport App from './App'\r\n\r\nimport '@css/main.less'\r\n\r\n\r\ndeclare global {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  interface Window { aptos: any }\r\n}\r\n\r\nconst root = createRoot((document.getElementById('root') as Element))\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  root.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  )\r\n})","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\n\r\nimport wallet from './modules/wallet'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    wallet\r\n  }\r\n})\r\n\r\nexport default store\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport {\r\n  connectToWallet,\r\n  getAccountAddress,\r\n  getAptosWallet,\r\n  getWalletNetwork,\r\n  isAccountCreated,\r\n  isWalletConnected,\r\n} from '@utils/wallet'\r\n\r\n\r\nexport interface WalletState {\r\n  isInstalled: boolean\r\n  isConnected: boolean\r\n  isAccountSet: boolean\r\n  walletNetwork: WalletNetworks\r\n  accountAddress: string | null\r\n  isAsyncFinish: boolean\r\n}\r\n\r\nexport type WalletNetworks = 'Devnet' | 'Testnet'\r\n\r\n\r\nexport const setWallet = createAsyncThunk(\r\n  'wallet/setWallet',\r\n  async () => {\r\n    const isInstalled = getAptosWallet()\r\n    const [\r\n      isAccountSet,\r\n      isConnected,\r\n      walletNetwork,\r\n      accountAddress,\r\n    ] = await Promise.all([\r\n      isAccountCreated(),\r\n      isWalletConnected(),\r\n      getWalletNetwork(),\r\n      getAccountAddress(),\r\n    ])\r\n\r\n    return {\r\n      isInstalled,\r\n      isAccountSet,\r\n      isConnected,\r\n      walletNetwork,\r\n      accountAddress,\r\n    }\r\n  }\r\n)\r\n\r\nexport const connectWallet = createAsyncThunk(\r\n  'wallet/connectWallet',\r\n  async () => {\r\n    const isConnected = await connectToWallet()\r\n    if (isConnected) {\r\n      const accountAddress = await getAccountAddress()\r\n      return accountAddress\r\n    }\r\n  }\r\n)\r\n\r\nconst wallet = createSlice({\r\n  name: 'wallet',\r\n  initialState: ({\r\n    isInstalled: false,\r\n    isAccountSet: false,\r\n    isConnected: false,\r\n    accountAddress: null,\r\n    walletNetwork: 'Devnet',\r\n    isAsyncFinish: false,\r\n  } as WalletState),\r\n  reducers: {},\r\n  extraReducers(builder) {\r\n    builder.addCase(setWallet.fulfilled, (state, { payload }) => {\r\n      state = Object.assign(state, payload, { isAsyncFinish: true })\r\n    })\r\n    builder.addCase(connectWallet.fulfilled, (state, { payload }) => {\r\n      if (payload) {\r\n        state.isConnected = true\r\n        state.accountAddress = payload\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\nexport default wallet.reducer","export const truncateMiddle = (\r\n  str: string,\r\n  frontLen: number,\r\n  backLen: number,\r\n  truncateStr = '…',\r\n): string => {\r\n  if (str === null) {\r\n    return ''\r\n  }\r\n\r\n  const strLen = str.length\r\n  if (\r\n    (frontLen === 0 && backLen === 0) ||\r\n    frontLen >= strLen ||\r\n    backLen >= strLen ||\r\n    frontLen + backLen >= strLen\r\n  ) {\r\n    return str\r\n  } else if (backLen === 0) {\r\n    return str.slice(0, frontLen) + truncateStr\r\n  } else {\r\n    return str.slice(0, frontLen) + truncateStr + str.slice(strLen - backLen)\r\n  }\r\n}\r\n\r\nexport const percentage = (num: number, total: number, point = 1): string => {\r\n  if (num === 0 || total === 0) return '0'\r\n  return ((num / total) * 100).toFixed(point)\r\n}","import { WalletNetworks } from '@store/modules/wallet'\r\nimport { truncateMiddle } from '@utils/index'\r\n\r\nexport const getAptosWallet = (): boolean => {\r\n  return 'aptos' in window\r\n}\r\n\r\nexport const isWalletConnected = async (): Promise<boolean> => {\r\n  try {\r\n    if (await window.aptos?.isConnected?.()) {\r\n      return true\r\n    }\r\n  } catch (error) {\r\n  }\r\n  return false\r\n}\r\n\r\nexport const isAccountCreated = async (): Promise<boolean> => {\r\n  try {\r\n    const res = await window.aptos?.isConnected?.()\r\n    return typeof res === 'boolean'\r\n  } catch (error) {\r\n  }\r\n  return false\r\n}\r\n\r\nexport const connectToWallet = async (): Promise<boolean> => {\r\n  try {\r\n    const result = await window.aptos?.connect?.()\r\n    if ('address' in result) return true\r\n  } catch (error) {\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getAccountAddress: () => Promise<string | null> = async () => {\r\n  try {\r\n    const data = await window.aptos?.account?.()\r\n    if ('address' in data) return data.address\r\n  } catch (error) {\r\n  }\r\n  return null\r\n}\r\n\r\nexport const getWalletNetwork: () => Promise<WalletNetworks> = async () => {\r\n  try {\r\n    return await window.aptos?.network?.()\r\n  } catch (error) {\r\n  }\r\n  return 'Devnet'\r\n}\r\n\r\nexport const isUpdatedVersion = (): boolean =>\r\n  window.aptos?.on instanceof Function\r\n\r\nexport function truncateAddress(accountAddress: string): string {\r\n  return truncateMiddle(accountAddress, 3, 3)\r\n}"],"names":["WalletButtonWrapper","text","props","Button","variant","OldWalletVersionWarning","warningText","Link","href","target","Tooltip","title","Stack","ml","Error","WalletButton","useAppSelector","state","wallet","isInstalled","isConnected","isAccountSet","accountAddress","dispatch","useAppDispatch","color","disabled","isWalletLatestVersion","isUpdatedVersion","onClick","connectWallet","truncateAddress","children","location","useLocation","isAsyncFinish","routerRule","routerRules","pathname","canAccess","to","className","Header","lazyLoad","Suspense","fallback","Home","lazy","List","Proposal","Detail","routes","index","element","path","ExplorerRoutes","Layout","common","useEffect","setWallet","window","aptos","on","useRoutes","router","root","createRoot","document","getElementById","addEventListener","render","store","App","configureStore","reducer","useDispatch","useSelector","createAsyncThunk","getAptosWallet","Promise","all","isAccountCreated","isWalletConnected","getWalletNetwork","getAccountAddress","walletNetwork","connectToWallet","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","Object","assign","truncateMiddle","str","frontLen","backLen","truncateStr","strLen","length","slice","percentage","num","total","point","toFixed","i","res","connect","account","data","address","network","Function"],"sourceRoot":""}