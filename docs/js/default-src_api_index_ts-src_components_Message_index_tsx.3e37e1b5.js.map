{"version":3,"file":"js/default-src_api_index_ts-src_components_Message_index_tsx.3e37e1b5.js","mappings":";sXASaA,EAAoB,2OCLjC,IAAMC,EAAS,IAAIC,EAAAA,GDEQ,yCCUNC,EAAAA,6LACC,gHAEpB,SAA6BC,GAC3B,OAAOH,EAAOI,mBAAmBD,EAClC,oCAED,WAAiH,IAC3GE,EAD2G,yDAAnC,CAAC,EAA/CC,EAAiF,EAAjFA,QAASC,EAAwE,EAAxEA,cAEnCA,IAAeF,EAAmBG,OAAOD,IAC7C,IAAME,EAAeH,GAAWI,KAAKJ,QACrC,OAAON,EAAOW,oBAAoBF,EAAc,CAAEF,cAAeF,GAClE,6BAED,YAAsE,IAA3CO,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,KACjC,OAAOb,EAAOc,aAAaF,EAAQC,EACpC,6EAhBkBX,sPCfrB,8hGAAAa,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,g/CA2HIC,EAhFEC,EAAAA,SAAAA,y2BAEMlB,8DAEV,WAAqBc,GAArB,sFACQK,EAAoC,CACxCC,KAAM,yBACNC,SAAU,GAAF,OAAKV,KAAKJ,QAAV,iCACRe,eAAgB,GAChBC,UAAWT,GALf,4BAS2BU,OAAOC,aATlC,iBAS2B,EAAcC,gCATzC,aAS2B,SAAyCP,GATpE,uBASYf,EATZ,EASYA,KATZ,kBAUWO,KAAKN,mBAAmBD,IAVnC,sCAYU,IAAIuB,MAAJ,MAZV,kJAgBA,4GACQC,EAAS,CAAEC,eAAgB,EAAGhB,OAAQ,IAD9C,kBAGyCF,KAAKC,sBAH9C,UAGUkB,EAHV,QAIUC,EAAcD,EAAuBE,MAAK,SAAAC,GAAQ,OAAIA,EAASb,OAAT,UAAqB,EAAKb,QAA1B,0BAAJ,MACnCwB,EAAYjB,KALrC,yCAKkDc,GALlD,cAMUM,EAAkBH,EAAYjB,KAE9Be,EAAiBM,SAASD,EAAgBE,kBAC1CvB,EAASqB,EAAgBG,UAAUxB,OAT7C,kBAWW,CAAEgB,eAAAA,EAAgBhB,OAAAA,IAX7B,2DAaWe,GAbX,gJAiBA,WAAmBU,EAAoBzB,GAAvC,8EACQC,EAAO,CACXyB,SAAU,MACVC,WAAY,GAAF,OAAK7B,KAAKJ,QAAV,wBACVkC,IAAKH,GAJT,kBAMS3B,KAAKI,aAAgC,CAAEF,OAAAA,EAAQC,KAAAA,KANxD,iIAWA,WAAWA,GAAX,sFACQK,EAAoC,CACxCC,KAAM,yBACNC,SAAU,GAAF,OAAKV,KAAKJ,QAAV,sBACRe,eAAgB,GAChBC,UAAWT,GALf,4BAS2BU,OAAOC,aATlC,iBAS2B,EAAcC,gCATzC,aAS2B,SAAyCP,GATpE,uBASYf,EATZ,EASYA,KATZ,kBAUWO,KAAKN,mBAAmBD,IAVnC,sCAYU,IAAIuB,MAAJ,MAZV,iJAgBA,WAAoBe,GAApB,2FACQd,EAAwB,GADhC,kBAGyCjB,KAAKC,sBAH9C,UAGUkB,EAHV,QAIUa,EAAeb,EAAuBE,MAAK,SAAAC,GAAQ,OAAIA,EAASb,OAAT,UAAqB,EAAKb,QAA1B,2BAAJ,MACnCoC,EAAa7B,KALvC,yCAKoDc,GALpD,WAMUgB,EAAoBD,EAAa7B,KAA6B+B,QAAQ/B,KAAKkB,MAAK,SAAAc,GAAI,OAAIA,EAAKL,MAAQC,CAAjB,MAChEE,EAAiBG,MAP/C,0CAO6DnB,GAP7D,iCAQWA,EAAOoB,OAAOJ,EAAiBG,QAR1C,2DAUWnB,GAVX,kLAhEIV,CAAkBf,GAiFxB,EACMc,IACJA,EAAW,IAAIC,ghBCzGjB,IAAM+B,EAAU,SAAC,GAA8C,QAA5CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,SAAU/B,EAAyB,EAAzBA,KACpC,MAAwBgC,EAAAA,EAAAA,WAAS,KAAjC,g0BAAOC,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,EAAd,EACpB,OACE,gBAAC,IAAD,CACED,KAAMA,EACNG,iBAAkBL,EAClBM,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,oBAAqB,SAAAC,GAAK,OAAI,gBAAC,IAAD,KAAWA,EAAX,CAAkBC,UAAU,SAAhC,EAC1BC,QAASR,GACT,gBAAC,IAAD,CAAOS,SAAU5C,EAAM6C,QAAQ,WAAWF,QAASR,GAChDL,GAIR,EAEKgB,EAAmB,CACvBC,QADuB,SACfjB,GAA0B,IAAjBC,EAAiB,uDAAN,IAC1BxC,KAAKyD,KAAKlB,EAASC,EAAU,UAC9B,EACDkB,MAJuB,SAIjBnB,GAA0B,IAAjBC,EAAiB,uDAAN,IACxBxC,KAAKyD,KAAKlB,EAASC,EAAU,QAC9B,EACDmB,QAPuB,SAOfpB,GAA0B,IAAjBC,EAAiB,uDAAN,IAC1BxC,KAAKyD,KAAKlB,EAASC,EAAU,UAC9B,EACDoB,KAVuB,SAUlBrB,GAA0B,IAAjBC,EAAiB,uDAAN,IACvBxC,KAAKyD,KAAKlB,EAASC,EAAU,OAC9B,EACDiB,KAbuB,SAalBlB,EAASC,EAAU/B,GACtB,IAAMoD,EAAMC,SAASC,cAAc,OAC7BC,EAAS,gBAAC1B,EAAD,CAASC,QAASA,EAASC,SAAUA,EAAU/B,KAAMA,KACpEwD,EAAAA,EAAAA,GAAWJ,GAAKK,OAAOF,GACvBF,SAASK,KAAKC,YAAYP,GAC1BQ,YAAW,WACTP,SAASK,KAAKG,YAAYT,EAC3B,GAAErB,EACJ,GAGH","sources":["webpack://react/./src/api/config.ts","webpack://react/./src/api/client.ts","webpack://react/./src/api/proposals/index.ts","webpack://react/./src/components/Message/index.tsx"],"sourcesContent":["const env = process.env.WEB_ENV\r\n\r\nexport const NODE_URL =\r\n  (env === 'pro') ? ''\r\n    : (env === 'pre' ? ''\r\n      : (env === 'sit' ? 'https://testnet.aptoslabs.com'\r\n        : (env === 'dev' ? 'https://fullnode.devnet.aptoslabs.com'\r\n          : 'https://fullnode.devnet.aptoslabs.com')))\r\n\r\nexport const PROPOSALS_ADDRESS = '0xbe2101583256a60f3b4c722d0a73a0fa4f8449a61bb9806b74aa23b3e65dee5b'","import { AptosClient, Types } from 'aptos'\r\n\r\nimport { NODE_URL } from './config'\r\n\r\nconst client = new AptosClient(NODE_URL)\r\n\r\ninterface RequestParameters {\r\n  address?: string\r\n  ledgerVersion?: number\r\n}\r\n\r\ninterface TableItemProps {\r\n  handle: string\r\n  data: Types.TableItemRequest\r\n}\r\n\r\nexport default class Abstract {\r\n  protected address = ''\r\n\r\n  protected waitForTransaction(hash: string): Promise<void> {\r\n    return client.waitForTransaction(hash)\r\n  } \r\n\r\n  protected getAccountResources({ address, ledgerVersion }: RequestParameters = {}): Promise<Types.MoveResource[]> {\r\n    let ledgerVersionBig: bigint | undefined\r\n    if (ledgerVersion) ledgerVersionBig = BigInt(ledgerVersion)\r\n    const addressValue = address || this.address\r\n    return client.getAccountResources(addressValue, { ledgerVersion: ledgerVersionBig })\r\n  }\r\n\r\n  protected getTableItem<T>({handle, data}: TableItemProps): Promise<T> {\r\n    return client.getTableItem(handle, data)\r\n  }\r\n}","import { Types } from 'aptos'\r\nimport Abstract from '@api/client'\r\nimport { PROPOSALS_ADDRESS } from '@api/config'\r\n\r\n\r\ninterface votingForumData {\r\n  next_proposal_id: string\r\n  proposals: {\r\n    handle: string\r\n  }\r\n}\r\n\r\nexport interface getTableHandleResponse {\r\n  nextProposalId: number\r\n  handle: string\r\n}\r\n\r\nexport interface ProsposalResponse {\r\n  creation_time_secs: string\r\n  description: string\r\n  end_time: string\r\n  is_resolved: boolean\r\n  no_votes: string\r\n  proposer: string\r\n  start_time: string\r\n  title: string\r\n  yes_votes: string\r\n  abstained_votes: string\r\n}\r\n\r\ninterface VotesDetailResponse {\r\n  records: {\r\n    data: {\r\n      key: string\r\n      value: VotesDetail[]\r\n    }[]\r\n  }\r\n}\r\n\r\nexport interface VotesDetail {\r\n  proposer: string\r\n  should_pass: number\r\n}\r\n\r\nclass Proposals extends Abstract {\r\n\r\n  address = PROPOSALS_ADDRESS\r\n\r\n  async createProposal(data: Array<string | number>): Promise<void> {\r\n    const payload: Types.TransactionPayload = {\r\n      type: \"entry_function_payload\",\r\n      function: `${this.address}::governance::create_proposal`,\r\n      type_arguments: [],\r\n      arguments: data,\r\n    }\r\n\r\n    try {\r\n      const { hash } = await window.aptos?.signAndSubmitTransaction?.(payload)\r\n      return this.waitForTransaction(hash)\r\n    } catch (error) {\r\n      throw new Error(error as string)\r\n    }\r\n  }\r\n\r\n  async getTableHandle(): Promise<getTableHandleResponse> {\r\n    const result = { nextProposalId: 0, handle: '' }\r\n    try {\r\n      const accountResourcesResult = await this.getAccountResources()\r\n      const votingForum = accountResourcesResult.find(resource => resource.type === `${this.address}::proposal::VotingForum`)\r\n      if (!votingForum || !votingForum.data) return result\r\n      const votingForumData = votingForum.data as votingForumData\r\n\r\n      const nextProposalId = parseInt(votingForumData.next_proposal_id)\r\n      const handle = votingForumData.proposals.handle\r\n\r\n      return { nextProposalId, handle }\r\n    } catch (error) {\r\n      return result\r\n    }\r\n  }\r\n\r\n  async getProsposal(proposalId: string, handle: string): Promise<ProsposalResponse> {\r\n    const data = {\r\n      key_type: \"u64\",\r\n      value_type: `${this.address}::proposal::Proposal`,\r\n      key: proposalId,\r\n    }\r\n    return this.getTableItem<ProsposalResponse>({ handle, data })\r\n\r\n\r\n  }\r\n\r\n  async vote(data: Array<number>) {\r\n    const payload: Types.TransactionPayload = {\r\n      type: \"entry_function_payload\",\r\n      function: `${this.address}::governance::vote`,\r\n      type_arguments: [],\r\n      arguments: data,\r\n    }\r\n\r\n    try {\r\n      const { hash } = await window.aptos?.signAndSubmitTransaction?.(payload)\r\n      return this.waitForTransaction(hash)\r\n    } catch (error) {\r\n      throw new Error(error as string)\r\n    }\r\n  }\r\n\r\n  async getTableVotes(id: string): Promise<VotesDetail[]> {\r\n    const result: VotesDetail[] = []\r\n    try {\r\n      const accountResourcesResult = await this.getAccountResources()\r\n      const votingDetail = accountResourcesResult.find(resource => resource.type === `${this.address}::proposal::VotingDetail`)\r\n      if (!votingDetail || !votingDetail.data) return result\r\n      const VotingDetailData = (votingDetail.data as VotesDetailResponse).records.data.find(item => item.key === id)\r\n      if (!VotingDetailData || !VotingDetailData.value) return result\r\n      return result.concat(VotingDetailData.value)\r\n    } catch (error) {\r\n      return result\r\n    }\r\n  }\r\n}\r\n\r\n// 单列模式返回对象\r\nlet instance\r\nexport default (() => {\r\n  if (instance) return instance\r\n  instance = new Proposals()\r\n  return instance\r\n})()","import React, { useState } from 'react'\r\n\r\nimport { createRoot } from 'react-dom/client'\r\n\r\nimport { Snackbar, Alert, Slide } from '@mui/material'\r\n\r\ntype MessageType = 'success' | 'error' | 'warning' | 'info'\r\n\r\ninterface MessageProps {\r\n  content: string\r\n  duration: number\r\n  type: MessageType\r\n}\r\n\r\ninterface Message {\r\n  success: (content: string, duration?: number) => void\r\n  error: (content: string, duration?: number) => void\r\n  warning: (content: string, duration?: number) => void\r\n  info: (content: string, duration?: number) => void\r\n  base: (content: string, duration: number, type: MessageType) => void\r\n}\r\n\r\nconst Message = ({ content, duration, type }: MessageProps) => {\r\n  const [open, setOpen] = useState(true)\r\n  const handleClose = () => setOpen(false)\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={duration}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      TransitionComponent={props => <Slide {...props} direction=\"down\" />}\r\n      onClose={handleClose}>\r\n      <Alert severity={type} variant=\"standard\" onClose={handleClose}>\r\n        {content}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\nconst message: Message = {\r\n  success(content, duration = 2000) {\r\n    this.base(content, duration, 'success')\r\n  },\r\n  error(content, duration = 2000) {\r\n    this.base(content, duration, 'error')\r\n  },\r\n  warning(content, duration = 2000) {\r\n    this.base(content, duration, 'warning')\r\n  },\r\n  info(content, duration = 2000) {\r\n    this.base(content, duration, 'info')\r\n  },\r\n  base(content, duration, type) {\r\n    const dom = document.createElement('div')\r\n    const JSXdom = <Message content={content} duration={duration} type={type}></Message>\r\n    createRoot(dom).render(JSXdom)\r\n    document.body.appendChild(dom)\r\n    setTimeout(() => {\r\n      document.body.removeChild(dom)\r\n    }, duration)\r\n  },\r\n}\r\n\r\nexport default message"],"names":["PROPOSALS_ADDRESS","client","AptosClient","Abstract","hash","waitForTransaction","ledgerVersionBig","address","ledgerVersion","BigInt","addressValue","this","getAccountResources","handle","data","getTableItem","i","instance","Proposals","payload","type","function","type_arguments","arguments","window","aptos","signAndSubmitTransaction","Error","result","nextProposalId","accountResourcesResult","votingForum","find","resource","votingForumData","parseInt","next_proposal_id","proposals","proposalId","key_type","value_type","key","id","votingDetail","VotingDetailData","records","item","value","concat","Message","content","duration","useState","open","setOpen","handleClose","autoHideDuration","anchorOrigin","vertical","horizontal","TransitionComponent","props","direction","onClose","severity","variant","message","success","base","error","warning","info","dom","document","createElement","JSXdom","createRoot","render","body","appendChild","setTimeout","removeChild"],"sourceRoot":""}